{"ast":null,"code":"var _jsxFileName = \"/Volumes/Extreme_SSD/Orthoquant/Speech2Text/Webapp/frontend/src/tools/calculator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './calculator.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst btnValues = [[\"C\", \"+/-\", \"%\", \"/\"], [7, 8, 9, \"X\"], [4, 5, 6, \"-\"], [1, 2, 3, \"+\"], [0, \".\", \"=\"]];\nconst scientificBtnValues = [[\"√\", \"π\", \"(\", \")\"], [\"log\", \"ln\", \"e^x\"], [\"sin\", \"cos\", \"tan\"], [\"sinh\", \"cosh\", \"tanh\"],\n// Hyperbolic functions\n[\"asin\", \"acos\", \"atan\"] // Inverse trigonometric functions\n];\n\nconst Calculator = () => {\n  _s();\n  const [value, setValue] = useState('');\n  const handleButtonClick = buttonValue => {\n    setValue(prevValue => prevValue + buttonValue);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calculator\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: value,\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scientific\",\n        children: scientificBtnValues.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: row.map((buttonValue, colIndex) => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleButtonClick(buttonValue),\n            children: buttonValue\n          }, colIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }, this))\n        }, rowIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"basic\",\n        children: btnValues.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: row.map((buttonValue, colIndex) => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleButtonClick(buttonValue),\n            className: buttonValue === '=' ? 'equal-button' : '',\n            children: buttonValue\n          }, colIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this))\n        }, rowIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(Calculator, \"A2PXPeq8TepW328gUMM4+o8Xryo=\");\n_c = Calculator;\nexport default Calculator;\nvar _c;\n$RefreshReg$(_c, \"Calculator\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","btnValues","scientificBtnValues","Calculator","_s","value","setValue","handleButtonClick","buttonValue","prevValue","className","children","type","readOnly","fileName","_jsxFileName","lineNumber","columnNumber","map","row","rowIndex","colIndex","onClick","_c","$RefreshReg$"],"sources":["/Volumes/Extreme_SSD/Orthoquant/Speech2Text/Webapp/frontend/src/tools/calculator.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport './calculator.css';\n\nconst btnValues = [\n  [\"C\", \"+/-\", \"%\", \"/\"],\n  [7, 8, 9, \"X\"],\n  [4, 5, 6, \"-\"],\n  [1, 2, 3, \"+\"],\n  [0, \".\", \"=\"],\n];\n\nconst scientificBtnValues = [\n  [ \"√\", \"π\", \"(\", \")\"],\n  [\"log\", \"ln\", \"e^x\"],\n  [\"sin\", \"cos\", \"tan\"],\n  [\"sinh\", \"cosh\", \"tanh\"], // Hyperbolic functions\n  [\"asin\", \"acos\", \"atan\"], // Inverse trigonometric functions\n];\n\nconst Calculator = () => {\n  const [value, setValue] = useState('');\n\n  const handleButtonClick = (buttonValue) => {\n    setValue((prevValue) => prevValue + buttonValue);\n  };\n\n  return (\n    <div className=\"calculator\">\n      <div className='display'>\n        <input type=\"text\" value={value} readOnly />\n      </div>\n      <div className=\"btn-container\">\n        <div className=\"scientific\">\n          {scientificBtnValues.map((row, rowIndex) => (\n            <div key={rowIndex} className=\"row\">\n              {row.map((buttonValue, colIndex) => (\n                <button\n                  key={colIndex}\n                  onClick={() => handleButtonClick(buttonValue)}\n                >\n                  {buttonValue}\n                </button>\n              ))}\n            </div>\n          ))}\n        </div>\n\n        <div className=\"basic\">\n          {btnValues.map((row, rowIndex) => (\n            <div key={rowIndex} className=\"row\">\n              {row.map((buttonValue, colIndex) => (\n                <button\n                  key={colIndex}\n                  onClick={() => handleButtonClick(buttonValue)}\n                  className={buttonValue === '=' ? 'equal-button' : ''} \n                >\n                  {buttonValue}\n                </button>\n              ))}\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Calculator;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}