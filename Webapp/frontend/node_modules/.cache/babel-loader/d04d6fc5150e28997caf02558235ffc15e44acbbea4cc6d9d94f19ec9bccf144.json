{"ast":null,"code":"var _jsxFileName = \"/Volumes/Extreme_SSD/Orthoquant/Speech2Text/Webapp/frontend/src/tools/calculator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './calculator.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst btnValues = [[\"C\", \"^\", \"%\", \"/\"], [7, 8, 9, \"*\"], [4, 5, 6, \"-\"], [1, 2, 3, \"+\"], [0, \".\", \"=\"]];\nconst scientificBtnValues = [[\"√\", \"π\", \"(\", \")\"], [\"log\", \"ln\", \"e\"], [\"sin\", \"cos\", \"tan\"], [\"sinh\", \"cosh\", \"tanh\"],\n// Hyperbolic functions\n[\"asin\", \"acos\", \"atan\"] // Inverse trigonometric functions\n];\n\nconst Calculator = () => {\n  _s();\n  const [value, setValue] = useState('');\n  const [unit, setUnit] = useState('radians'); // Default to radians\n\n  const handleButtonClick = async buttonValue => {\n    if (buttonValue === 'C') {\n      setValue('');\n    } else if (buttonValue === '=') {\n      try {\n        const response = await axios.post('http://localhost:8000/api/calculate/', {\n          expression: value\n        });\n        const result = response.data.result;\n        setValue(result);\n      } catch (error) {\n        console.error('Error sending data to the backend:', error);\n      }\n    } else if (buttonValue === 'degrees' || buttonValue === 'radians') {\n      setUnit(buttonValue);\n    } else {\n      setValue(prevValue => prevValue + buttonValue);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calculator\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: value,\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"unit-selection\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Degrees\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"unit\",\n            value: \"degrees\",\n            checked: unit === 'degrees',\n            onChange: () => handleButtonClick('degrees')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Radians\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"unit\",\n            value: \"radians\",\n            checked: unit === 'radians',\n            onChange: () => handleButtonClick('radians')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scientific\",\n        children: scientificBtnValues.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: row.map((buttonValue, colIndex) => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleButtonClick(buttonValue),\n            className: buttonValue.startsWith(\"sin\") || buttonValue.startsWith(\"cos\") || buttonValue.startsWith(\"tan\") ? unit === \"degrees\" ? \"trig-function degrees\" : \"trig-function radians\" : \"\",\n            children: buttonValue\n          }, colIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this))\n        }, rowIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"basic\",\n        children: btnValues.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: row.map((buttonValue, colIndex) => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleButtonClick(buttonValue),\n            className: buttonValue === '=' ? 'btn btn-primary ml-2' : '',\n            children: buttonValue\n          }, colIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this))\n        }, rowIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(Calculator, \"R/uVEwA7MHHK+Po3cuAtF+1urrc=\");\n_c = Calculator;\nexport default Calculator;\nvar _c;\n$RefreshReg$(_c, \"Calculator\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","btnValues","scientificBtnValues","Calculator","_s","value","setValue","unit","setUnit","handleButtonClick","buttonValue","response","post","expression","result","data","error","console","prevValue","className","children","type","readOnly","fileName","_jsxFileName","lineNumber","columnNumber","name","checked","onChange","map","row","rowIndex","colIndex","onClick","startsWith","_c","$RefreshReg$"],"sources":["/Volumes/Extreme_SSD/Orthoquant/Speech2Text/Webapp/frontend/src/tools/calculator.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport './calculator.css';\nimport axios from 'axios';\n\nconst btnValues = [\n  [\"C\", \"^\", \"%\", \"/\"],\n  [7, 8, 9, \"*\"],\n  [4, 5, 6, \"-\"],\n  [1, 2, 3, \"+\"],\n  [0, \".\", \"=\"],\n];\n\nconst scientificBtnValues = [\n  [\"√\", \"π\", \"(\", \")\"],\n  [\"log\", \"ln\", \"e\"],\n  [\"sin\", \"cos\", \"tan\"],\n  [\"sinh\", \"cosh\", \"tanh\"], // Hyperbolic functions\n  [\"asin\", \"acos\", \"atan\"], // Inverse trigonometric functions\n];\n\nconst Calculator = () => {\n  const [value, setValue] = useState('');\n  const [unit, setUnit] = useState('radians'); // Default to radians\n\n  const handleButtonClick = async (buttonValue) => {\n    if (buttonValue === 'C') {\n      setValue('');\n    } else if (buttonValue === '=') {\n      try {\n        const response = await axios.post('http://localhost:8000/api/calculate/', {\n          expression: value,\n        });\n        const result = response.data.result;\n        setValue(result);\n      } catch (error) {\n        console.error('Error sending data to the backend:', error);\n      }\n    } else if (buttonValue === 'degrees' || buttonValue === 'radians') {\n      setUnit(buttonValue);\n    } else {\n      setValue((prevValue) => prevValue + buttonValue);\n    }\n  };\n\n  return (\n    <div className=\"calculator\">\n      <div className='display'>\n        <input type=\"text\" value={value} readOnly />\n      </div>\n      <div className=\"btn-container\">\n        <div className=\"unit-selection\">\n          <label>\n            Degrees\n            <input\n              type=\"radio\"\n              name=\"unit\"\n              value=\"degrees\"\n              checked={unit === 'degrees'}\n              onChange={() => handleButtonClick('degrees')}\n            />\n          </label>\n          <label>\n            Radians\n            <input\n              type=\"radio\"\n              name=\"unit\"\n              value=\"radians\"\n              checked={unit === 'radians'}\n              onChange={() => handleButtonClick('radians')}\n            />\n          </label>\n        </div>\n        <div className=\"scientific\">\n          {scientificBtnValues.map((row, rowIndex) => (\n            <div key={rowIndex} className=\"row\">\n              {row.map((buttonValue, colIndex) => (\n                <button\n                  key={colIndex}\n                  onClick={() => handleButtonClick(buttonValue)}\n                  className={\n                    buttonValue.startsWith(\"sin\") ||\n                    buttonValue.startsWith(\"cos\") ||\n                    buttonValue.startsWith(\"tan\")\n                      ? unit === \"degrees\"\n                        ? \"trig-function degrees\"\n                        : \"trig-function radians\"\n                      : \"\"\n                  }\n                >\n                  {buttonValue}\n                </button>\n              ))}\n            </div>\n          ))}\n        </div>\n\n        <div className=\"basic\">\n          {btnValues.map((row, rowIndex) => (\n            <div key={rowIndex} className=\"row\">\n              {row.map((buttonValue, colIndex) => (\n                <button\n                  key={colIndex}\n                  onClick={() => handleButtonClick(buttonValue)}\n                  className={buttonValue === '=' ? 'btn btn-primary ml-2' : ''}\n                >\n                  {buttonValue}\n                </button>\n              ))}\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Calculator;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}